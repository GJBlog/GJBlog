<feed xmlns="http://www.w3.org/2005/Atom"> <id></id><title>GJ</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-02-23T03:21:11+08:00</updated> <author> <name>guojie</name> <uri></uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator> <rights> © 2021 guojie </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>CSS-文字、文本</title><link href="/posts/CSS-%E6%96%87%E5%AD%97-%E6%96%87%E6%9C%AC/" rel="alternate" type="text/html" title="CSS-文字、文本" /><published>2018-05-20T00:34:00+08:00</published> <updated>2018-05-20T00:34:00+08:00</updated> <id>/posts/CSS-%E6%96%87%E5%AD%97-%E6%96%87%E6%9C%AC/</id> <content src="/posts/CSS-%E6%96%87%E5%AD%97-%E6%96%87%E6%9C%AC/" /> <author> <name>guojie</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> CSS-文字、文本 1、style标签中type属性默认是type=”text/css” 2、样式： 标签名称 { 属性名称：属性对应的值 } 3、文字属性 文字样式 font-style: italic; normal：正常(默认) italic：倾斜 文字粗细 font-weight：bold; 单词取值： bold：加粗 bolder：更粗 lighter：细线(默认) 数字取值：100~900之间整百 文字大小 font-size：30px; 单位：像素 文字字体 font-family：”微软雅黑",备选字体,…… 中文名称必须要使用双引号或者单引号括起来 中文字体能处理英文，英文字体不能处理中文 文字简写 font: italic bold 10px "楷体" style、weight 可以省略、交换位... </summary> </entry> <entry><title>App-重签名</title><link href="/posts/App-%E9%87%8D%E7%AD%BE%E5%90%8D/" rel="alternate" type="text/html" title="App-重签名" /><published>2018-03-11T00:34:00+08:00</published> <updated>2018-03-11T00:34:00+08:00</updated> <id>/posts/App-%E9%87%8D%E7%AD%BE%E5%90%8D/</id> <content src="/posts/App-%E9%87%8D%E7%AD%BE%E5%90%8D/" /> <author> <name>guojie</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> App的重签名 在有些情况下，我们或许会需要对AppStore下载的App或者其他App有重签名的操作，比如说在分发某个App的ipa包，并没有修改App的源码，因为看不到App的源码，无法直接使用自己的账号来打包，这个使用就需要使用到App的重签名！那么通常的重签名方式都有哪些呢？ 1、ios-app-signer 工具 工具界面如下所示， input File：选择对应的.ipa包 Signing Certificate：选择对应的证书 Provisioning Profile：选择对应的描述文件 其他选项都是可选 2、sigh脚本 通过 Homebrew 安装 ruby brew install ruby 安装sigh sudo gem install sigh 使用步骤 在终端输入 b... </summary> </entry> <entry><title>Swift-集合</title><link href="/posts/Swift-%E9%9B%86%E5%90%88/" rel="alternate" type="text/html" title="Swift-集合" /><published>2018-03-10T20:55:00+08:00</published> <updated>2018-03-10T20:55:00+08:00</updated> <id>/posts/Swift-%E9%9B%86%E5%90%88/</id> <content src="/posts/Swift-%E9%9B%86%E5%90%88/" /> <author> <name>guojie</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> 三、集合类型(Collection Types) 1、数组(Arrays) 使用有序表存储同一类型的多个值。 var someInts = [Int]() var someInts = Array&amp;lt;Int&amp;gt;() var shoppingList: [String] = ["Eggs", "Milk"] 2、集合(Set) 存储相同类型并且没有确定顺序的值。当集合元素顺序不重要时或者希望确保每个元素只出现一次时可以使用集合而不是数组。 一个类型要想存储在集合中，必须是可哈希化。需要提供一个方法来计算它的Hash值。相等的对象哈希值必须相同。 Swift中所有的基本类型(String、Int、Bool、Double)都是可哈希化的 使用自定义的类型作为集合的值得类型或者字典的键的类型，前提是自定义的类型必须符合Swift标准库中的Hash... </summary> </entry> <entry><title>Swift-字符串和字符</title><link href="/posts/Swift-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%AD%97%E7%AC%A6/" rel="alternate" type="text/html" title="Swift-字符串和字符" /><published>2018-03-04T14:10:00+08:00</published> <updated>2018-03-04T14:10:00+08:00</updated> <id>/posts/Swift-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%AD%97%E7%AC%A6/</id> <content src="/posts/Swift-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%AD%97%E7%AC%A6/" /> <author> <name>guojie</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> 二、字符串和字符(Strings and Characters) 1、字符串字面量(String Literals) let something = "some string" 2、多行字符串字面量(Multiline String Literals) let quotation = """ the White Rabbit put on his spectacles till you come to …… """ 3、在多行字符串字面量中通过在行尾添加\来取消换行符,且不可以在最后一行添加\ let some = """ the White Rabbit put on his spectacles. "Where shall I begin\ please your Majesty """ 4、字符串字面量的特殊字符 转义字符：\0(空字符)、\(反... </summary> </entry> <entry><title>Swift-常量与变量</title><link href="/posts/Swift-%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/" rel="alternate" type="text/html" title="Swift-常量与变量" /><published>2018-03-03T11:33:00+08:00</published> <updated>2018-03-03T11:33:00+08:00</updated> <id>/posts/Swift-%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/</id> <content src="/posts/Swift-%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/" /> <author> <name>guojie</name> </author> <category term="Blogging" /> <category term="Demo" /> <summary> 一、常量与变量 1、使用之前必须声明 let constant = "常量" var variable = "变量" 2、一行声明多个变量和多个变量赋值 var red, green, blue: Double var x = 0.0, y = 0.0, z = 0.0 3、变量、常量名的命名 不能以数字开头 如果非要使用Swfit关键字，则需要关键字前后添加反引号(`) 如果在使用printf打印输出时不想换行，可以设置terminator参数为”” let (`let`) = "let关键字" print("输出", terminator:"") print("是是是\(XXX)") 4、swift注释 swift中的多行注释可以允许嵌套注释 /*XXXXXXXXX XXXXXXXXXXX /*XXXXXXXXX */ XXXXXXX... </summary> </entry> </feed>
